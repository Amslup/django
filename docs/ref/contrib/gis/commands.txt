.. ref-geofreedom-admin:

=============================
GeoFreedom Management Commands
=============================

inspectdb
=========

.. describe:: freedom-admin.py inspectdb

When :mod:`freedom.contrib.gis` is in your :setting:`INSTALLED_APPS`, the
:djadmin:`inspectdb` management command is overridden with one from GeoFreedom.
The overridden command is spatially-aware, and places geometry fields in the
auto-generated model definition, where appropriate.

ogrinspect <data_source> <model_name>
=====================================

.. freedom-admin:: ogrinspect

The ``ogrinspect`` management command will inspect the given OGR-compatible
:class:`~freedom.contrib.gis.gdal.DataSource` (e.g., a shapefile) and will
output a GeoFreedom model with the given model name.  There's a detailed example
of using ``ogrinspect`` :ref:`in the tutorial <ogrinspect-intro>`.

.. freedom-admin-option:: --blank <blank_field(s)>

   Use a comma separated list of OGR field names to add the ``blank=True``
   keyword option to the field definition.  Set with ``true`` to apply
   to all applicable fields.

.. freedom-admin-option:: --decimal <decimal_field(s)>

   Use a comma separated list of OGR float fields to generate
   :class:`~freedom.db.models.DecimalField` instead of the default
   :class:`~freedom.db.models.FloatField`. Set to ``true`` to apply to all
   OGR float fields.

.. freedom-admin-option:: --geom-name <name>

   Specifies the model attribute name to use for the geometry field.
   Defaults to ``'geom'``.

.. freedom-admin-option:: --layer <layer>

   The key for specifying which layer in the OGR
   :class:`~freedom.contrib.gis.gdal.DataSource` source to use.
   Defaults to 0 (the first layer). May be an integer or a string identifier
   for the :class:`~freedom.contrib.gis.gdal.Layer`. When inspecting databases,
   ``layer`` is generally the table name you want to inspect.

.. freedom-admin-option:: --mapping

   Automatically generate a mapping dictionary for use with
   :class:`~freedom.contrib.gis.utils.LayerMapping`.

.. freedom-admin-option:: --multi-geom

   When generating the geometry field, treat it as a geometry collection.
   For example, if this setting is enabled then a
   :class:`~freedom.contrib.gis.db.models.MultiPolygonField` will be placed
   in the generated model rather than
   :class:`~freedom.contrib.gis.db.models.PolygonField`.

.. freedom-admin-option:: --name-field <name_field>

   Generates a ``__str__`` routine (``__unicode__`` on Python 2) on the model
   that will return the given field name.

.. freedom-admin-option:: --no-imports

   Suppresses the ``from freedom.contrib.gis.db import models`` import statement.

.. freedom-admin-option:: --null <null_field(s)>

   Use a comma separated list of OGR field names to add the ``null=True``
   keyword option to the field definition.  Set with ``true`` to apply to
   all applicable fields.

.. freedom-admin-option:: --srid

   The SRID to use for the geometry field.  If not set, ``ogrinspect`` attempts
   to automatically determine of the SRID of the data source.
