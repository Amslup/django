===========================
Check constraints reference
===========================

.. module:: django.db.models.constraints

.. currentmodule:: django.db.models

.. versionadded:: 2.2

The classes defined in this module are added in the model
:attr:`Meta.constraints <django.db.models.Options.constraints>` option.

.. admonition:: Referencing built-in constraints

    Constraints are defined in ``django.db.models.constraints``, but for
    convenience they're imported into :mod:`django.db.models`. The standard
    convention is to use ``from django.db import models`` and refer to the
    constraints as ``models.ConstraintType``.

``CheckConstraint``
===================

The ``CheckConstraint`` class creates database check constraints.

.. class:: CheckConstraint(*, check, name)

    Creates a check constraint in the database.

``check``
---------

.. attribute:: CheckConstraint.check

A :class:`Q` object that specifies the check you want the constraint to
enforce.

For example ``CheckConstraint(check=Q(age__gte=18), name='age_gte_18')``
ensures the age field is never less than 18.

``name``
--------

.. attribute:: CheckConstraint.name

The name of the constraint.


``UniqueConstraint``
====================

The ``CheckConstraint`` class creates database unique constraints.

.. class:: UniqueConstraint(*, fields, name)

    Creates a unique constraint in the database.

``fields``
----------

.. attribute:: CheckConstraint.fields

A list of field names that specifies the unique set of columns you want the
constraint to enforce.

For example ``UniqueConstraint(fields=['room', 'date'], name='unique_location')``
ensures only a room location can exist for each ``date``.

``name``
--------

.. attribute:: CheckConstraint.name

The name of the constraint.
